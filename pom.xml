<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>giis</groupId>
	<artifactId>samples-test-spring</artifactId>
	<version>2.2.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<organization>
		<name>Grupo de Investigacion en Ingenieria del Software - Universidad de Oviedo</name>
		<url>http://giis.uniovi.es/</url>
	</organization>

	<name>samples-test-spring</name>
	<description>Ejemplo de pruebas con Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.5</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>17</java.version>
		
		<surefire.version>3.5.3</surefire.version>
		<!-- removes error flag that appears for some eclipse users -->
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
		<!-- required for sonarcloud.io -->
		<sonar.organization>giis</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<!--required here to get the right versions, issue #15-->
		<selenium.version>4.31.0</selenium.version>
	</properties>

	<dependencies>
		<!-- Dependencias generales de Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!-- lombok, para generar automaticamente getters y setters -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- necesario para que surefire plugin detecte tests al pasar de 2.21.0 a 2.22.2 -->
		<dependency>
		    <groupId>org.junit.vintage</groupId>
		    <artifactId>junit-vintage-engine</artifactId>
		    <scope>test</scope>
		    <exclusions>
		        <exclusion>
		            <groupId>org.hamcrest</groupId>
		            <artifactId>hamcrest-core</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		<!-- pruebas junit con parametros -->
		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>1.1.1</version>
			<scope>test</scope>
		</dependency>
		<!-- pruebas BDD -->
		<dependency>
			<groupId>org.jbehave</groupId>
			<artifactId>jbehave-core</artifactId>
			<version>5.2.0</version>
    		<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jbehave</groupId>
			<artifactId>jbehave-spring</artifactId>
			<version>5.2.0</version>
    		<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.valfirst</groupId>
			<artifactId>jbehave-junit-runner</artifactId>
			<version>2.3.2</version>
    		<scope>test</scope>
		</dependency>
		
		<!-- dependencias para usar clases de utilidad que tambien se usan samples-test-java -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.10.1</version>
		</dependency>
		
		<!-- Selenium bindings -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version><!--$NO-MVN-MAN-VER$-->
    		<scope>test</scope>
		</dependency>
		<!-- not needed as it is included by selema
		<dependency>
    		<groupId>io.github.bonigarcia</groupId>
    		<artifactId>webdrivermanager</artifactId>
    		<version>5.0.3</version>
    		<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>io.github.javiertuya</groupId>
			<artifactId>selema</artifactId>
			<version>3.4.0</version>
    		<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jsmart</groupId>
			<artifactId>zerocode-tdd</artifactId>
			<version>1.3.45</version>
    		<scope>test</scope>
		</dependency>

	</dependencies>

  	<distributionManagement>
    	<repository>
      		<id>github</id>
      		<name>GitHub Packages</name>
      		<url>https://maven.pkg.github.com/javiertuya/samples-test-spring</url>
    	</repository>
  	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
			        <execution>
						<id>build-info</id>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version><!--$NO-MVN-MAN-VER$-->
				<configuration>
					<skipTests>${skipTests}</skipTests>
					<!-- Sets the VM argument line used when unit tests are run under JaCoCo -->
					<argLine>${surefireArgLine}</argLine>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<!--para evitar fallos con openjdk en linux-->
                	<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<!-- Configuracion para tests con jbehave. 
				otar que desde Eclipse los test gherkin se copian correctamente a la carpeta con las clases 
				de test, pero desde maven no. Por eso se anyade un resources plugin que realiza 
				esta copia justo tras compilar las pruebas y antes de ejecutarlas (fase process-test-classes) -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-stories</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/test-classes</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/test/java</directory>
									<includes>
										<include>**/*.story</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.13</version>
				<configuration>
					<excludes>
						<exclude>**/TableColumnAdjuster.*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- reports test ut (surefire) e it (failsafe) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${surefire.version}</version>
				<executions>
					<execution>
						<id>test-reports</id>
						<phase>test</phase>
						<goals>
							<goal>report-only</goal>
						</goals>
						<configuration>
							<skipSurefireReport>${skipTests}</skipSurefireReport>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Otras tareas realizadas con ant-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<!-- Reports de test estilo junit -->
					<execution>
						<id>junit-reports</id>
						<phase>test</phase>
						<configuration>
							<target unless="skipTests">
								<junitreport todir="target/surefire-reports">
									<fileset dir="target/surefire-reports">
										<include name="**/*.xml" />
									</fileset>
									<report format="frames" todir="target/site/junit-frames" />
									<report format="noframes"
										todir="target/site/junit-noframes" />
								</junitreport>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-junit</artifactId>
						<version>1.10.15</version>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-trax</artifactId>
						<version>1.8.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- Generacion de documentacion javadoc, incluyendo un jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<overview>${basedir}/src/main/java/overview.html</overview>
					<sourcepath>${basedir}/src/main/java;${basedir}/src/test/java</sourcepath>
					<!-- Desde v3.10, destDir ha sido eliminada, usa localizacion por defeto-->
					<show>private</show>
					<nohelp>true</nohelp>
					<quiet>true</quiet>
					<doclint>none</doclint>
				</configuration>
				<executions>
					<execution>
						<id>generate-all-javadocs</id>
						<phase>package</phase>
						<goals>
							<goal>test-javadoc</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
